// Code generated by protoc-gen-go.
// source: kickstarter.proto
// DO NOT EDIT!

package protos

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type ProjectList struct {
	Projects         []*Project `protobuf:"bytes,1,rep,name=projects" json:"projects,omitempty"`
	TotalHits        *uint32    `protobuf:"varint,2,opt,name=total_hits" json:"total_hits,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *ProjectList) Reset()         { *m = ProjectList{} }
func (m *ProjectList) String() string { return proto.CompactTextString(m) }
func (*ProjectList) ProtoMessage()    {}

func (m *ProjectList) GetProjects() []*Project {
	if m != nil {
		return m.Projects
	}
	return nil
}

func (m *ProjectList) GetTotalHits() uint32 {
	if m != nil && m.TotalHits != nil {
		return *m.TotalHits
	}
	return 0
}

type Project struct {
	Id                   *int64    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name                 *string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Blurb                *string   `protobuf:"bytes,3,opt,name=blurb" json:"blurb,omitempty"`
	Goal                 *float32  `protobuf:"fixed32,4,opt,name=goal" json:"goal,omitempty"`
	Pledged              *float32  `protobuf:"fixed32,5,opt,name=pledged" json:"pledged,omitempty"`
	State                *string   `protobuf:"bytes,6,opt,name=state" json:"state,omitempty"`
	Slug                 *string   `protobuf:"bytes,7,opt,name=slug" json:"slug,omitempty"`
	DisableCommunication *bool     `protobuf:"varint,8,opt,name=disable_communication" json:"disable_communication,omitempty"`
	Country              *string   `protobuf:"bytes,9,opt,name=country" json:"country,omitempty"`
	CurrencySymbol       *string   `protobuf:"bytes,10,opt,name=currency_symbol" json:"currency_symbol,omitempty"`
	CurrencyTrailingCode *bool     `protobuf:"varint,11,opt,name=currency_trailing_code" json:"currency_trailing_code,omitempty"`
	Deadline             *uint32   `protobuf:"varint,12,opt,name=deadline" json:"deadline,omitempty"`
	StateChangedAt       *uint32   `protobuf:"varint,13,opt,name=state_changed_at" json:"state_changed_at,omitempty"`
	CreatedAt            *uint32   `protobuf:"varint,14,opt,name=created_at" json:"created_at,omitempty"`
	LaunchedAt           *uint32   `protobuf:"varint,15,opt,name=launched_at" json:"launched_at,omitempty"`
	BackersCount         *float32  `protobuf:"fixed32,16,opt,name=backers_count" json:"backers_count,omitempty"`
	Photo                *Photo    `protobuf:"bytes,17,opt,name=photo" json:"photo,omitempty"`
	Creator              *User     `protobuf:"bytes,18,opt,name=creator" json:"creator,omitempty"`
	Location             *Location `protobuf:"bytes,19,opt,name=location" json:"location,omitempty"`
	Urls                 *Urls     `protobuf:"bytes,20,opt,name=urls" json:"urls,omitempty"`
	XXX_unrecognized     []byte    `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}

func (m *Project) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Project) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Project) GetBlurb() string {
	if m != nil && m.Blurb != nil {
		return *m.Blurb
	}
	return ""
}

func (m *Project) GetGoal() float32 {
	if m != nil && m.Goal != nil {
		return *m.Goal
	}
	return 0
}

func (m *Project) GetPledged() float32 {
	if m != nil && m.Pledged != nil {
		return *m.Pledged
	}
	return 0
}

func (m *Project) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *Project) GetSlug() string {
	if m != nil && m.Slug != nil {
		return *m.Slug
	}
	return ""
}

func (m *Project) GetDisableCommunication() bool {
	if m != nil && m.DisableCommunication != nil {
		return *m.DisableCommunication
	}
	return false
}

func (m *Project) GetCountry() string {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return ""
}

func (m *Project) GetCurrencySymbol() string {
	if m != nil && m.CurrencySymbol != nil {
		return *m.CurrencySymbol
	}
	return ""
}

func (m *Project) GetCurrencyTrailingCode() bool {
	if m != nil && m.CurrencyTrailingCode != nil {
		return *m.CurrencyTrailingCode
	}
	return false
}

func (m *Project) GetDeadline() uint32 {
	if m != nil && m.Deadline != nil {
		return *m.Deadline
	}
	return 0
}

func (m *Project) GetStateChangedAt() uint32 {
	if m != nil && m.StateChangedAt != nil {
		return *m.StateChangedAt
	}
	return 0
}

func (m *Project) GetCreatedAt() uint32 {
	if m != nil && m.CreatedAt != nil {
		return *m.CreatedAt
	}
	return 0
}

func (m *Project) GetLaunchedAt() uint32 {
	if m != nil && m.LaunchedAt != nil {
		return *m.LaunchedAt
	}
	return 0
}

func (m *Project) GetBackersCount() float32 {
	if m != nil && m.BackersCount != nil {
		return *m.BackersCount
	}
	return 0
}

func (m *Project) GetPhoto() *Photo {
	if m != nil {
		return m.Photo
	}
	return nil
}

func (m *Project) GetCreator() *User {
	if m != nil {
		return m.Creator
	}
	return nil
}

func (m *Project) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Project) GetUrls() *Urls {
	if m != nil {
		return m.Urls
	}
	return nil
}

type Photo struct {
	Full             *string `protobuf:"bytes,1,opt,name=full" json:"full,omitempty"`
	Ed               *string `protobuf:"bytes,2,opt,name=ed" json:"ed,omitempty"`
	Med              *string `protobuf:"bytes,3,opt,name=med" json:"med,omitempty"`
	Little           *string `protobuf:"bytes,4,opt,name=little" json:"little,omitempty"`
	Small            *string `protobuf:"bytes,5,opt,name=small" json:"small,omitempty"`
	Thumb            *string `protobuf:"bytes,6,opt,name=thumb" json:"thumb,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Photo) Reset()         { *m = Photo{} }
func (m *Photo) String() string { return proto.CompactTextString(m) }
func (*Photo) ProtoMessage()    {}

func (m *Photo) GetFull() string {
	if m != nil && m.Full != nil {
		return *m.Full
	}
	return ""
}

func (m *Photo) GetEd() string {
	if m != nil && m.Ed != nil {
		return *m.Ed
	}
	return ""
}

func (m *Photo) GetMed() string {
	if m != nil && m.Med != nil {
		return *m.Med
	}
	return ""
}

func (m *Photo) GetLittle() string {
	if m != nil && m.Little != nil {
		return *m.Little
	}
	return ""
}

func (m *Photo) GetSmall() string {
	if m != nil && m.Small != nil {
		return *m.Small
	}
	return ""
}

func (m *Photo) GetThumb() string {
	if m != nil && m.Thumb != nil {
		return *m.Thumb
	}
	return ""
}

type User struct {
	Id               *uint32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name             *string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Avatar           *Photo    `protobuf:"bytes,3,opt,name=avatar" json:"avatar,omitempty"`
	Urls             *Urls     `protobuf:"bytes,4,opt,name=urls" json:"urls,omitempty"`
	Location         *Location `protobuf:"bytes,5,opt,name=location" json:"location,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}

func (m *User) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *User) GetAvatar() *Photo {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *User) GetUrls() *Urls {
	if m != nil {
		return m.Urls
	}
	return nil
}

func (m *User) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type Urls struct {
	Web              *Link  `protobuf:"bytes,1,opt,name=web" json:"web,omitempty"`
	Api              *Link  `protobuf:"bytes,2,opt,name=api" json:"api,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Urls) Reset()         { *m = Urls{} }
func (m *Urls) String() string { return proto.CompactTextString(m) }
func (*Urls) ProtoMessage()    {}

func (m *Urls) GetWeb() *Link {
	if m != nil {
		return m.Web
	}
	return nil
}

func (m *Urls) GetApi() *Link {
	if m != nil {
		return m.Api
	}
	return nil
}

type Link struct {
	User             *string `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Discover         *string `protobuf:"bytes,2,opt,name=discover" json:"discover,omitempty"`
	Location         *string `protobuf:"bytes,3,opt,name=location" json:"location,omitempty"`
	Project          *string `protobuf:"bytes,4,opt,name=project" json:"project,omitempty"`
	NearbyProjects   *string `protobuf:"bytes,5,opt,name=nearby_projects" json:"nearby_projects,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Link) Reset()         { *m = Link{} }
func (m *Link) String() string { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()    {}

func (m *Link) GetUser() string {
	if m != nil && m.User != nil {
		return *m.User
	}
	return ""
}

func (m *Link) GetDiscover() string {
	if m != nil && m.Discover != nil {
		return *m.Discover
	}
	return ""
}

func (m *Link) GetLocation() string {
	if m != nil && m.Location != nil {
		return *m.Location
	}
	return ""
}

func (m *Link) GetProject() string {
	if m != nil && m.Project != nil {
		return *m.Project
	}
	return ""
}

func (m *Link) GetNearbyProjects() string {
	if m != nil && m.NearbyProjects != nil {
		return *m.NearbyProjects
	}
	return ""
}

type Location struct {
	Id               *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Slug             *string `protobuf:"bytes,3,opt,name=slug" json:"slug,omitempty"`
	ShortName        *string `protobuf:"bytes,4,opt,name=short_name" json:"short_name,omitempty"`
	DisplayableName  *string `protobuf:"bytes,5,opt,name=displayable_name" json:"displayable_name,omitempty"`
	Country          *string `protobuf:"bytes,6,opt,name=country" json:"country,omitempty"`
	State            *string `protobuf:"bytes,7,opt,name=state" json:"state,omitempty"`
	Urls             *Urls   `protobuf:"bytes,8,opt,name=urls" json:"urls,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}

func (m *Location) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Location) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Location) GetSlug() string {
	if m != nil && m.Slug != nil {
		return *m.Slug
	}
	return ""
}

func (m *Location) GetShortName() string {
	if m != nil && m.ShortName != nil {
		return *m.ShortName
	}
	return ""
}

func (m *Location) GetDisplayableName() string {
	if m != nil && m.DisplayableName != nil {
		return *m.DisplayableName
	}
	return ""
}

func (m *Location) GetCountry() string {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return ""
}

func (m *Location) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *Location) GetUrls() *Urls {
	if m != nil {
		return m.Urls
	}
	return nil
}

type Category struct {
	Id               *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Slug             *string `protobuf:"bytes,3,opt,name=slug" json:"slug,omitempty"`
	Position         *uint32 `protobuf:"varint,4,opt,name=position" json:"position,omitempty"`
	ParentId         *uint32 `protobuf:"varint,5,opt,name=parent_id" json:"parent_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Category) Reset()         { *m = Category{} }
func (m *Category) String() string { return proto.CompactTextString(m) }
func (*Category) ProtoMessage()    {}

func (m *Category) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Category) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Category) GetSlug() string {
	if m != nil && m.Slug != nil {
		return *m.Slug
	}
	return ""
}

func (m *Category) GetPosition() uint32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *Category) GetParentId() uint32 {
	if m != nil && m.ParentId != nil {
		return *m.ParentId
	}
	return 0
}

func init() {
}
